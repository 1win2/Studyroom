import heapq
import sys
input = sys.stdin.readline
INF = int(1e9)

#노드의 개수, 간선의 개수 입력
n, m = map(int,input().split())
#시작노드 입력
start = int(input())
#연결된 노드정보 리스트
graph = [[] for i in range(n+1)]
#거리 무한대 초기화
distance = [INF] * (n+1)

#간선 정보 입력
for _ i in range(m):
    a, b, c = map(int, input().split())
    graph[a].append((b,c))

def dijkstra(start):
    q = []
    #시작노드 설정
    heapq.heappush(q, (0,start))
    distance[start] = 0
    while q: #q가 비어있지 않음 = true
        #최단거리노드 꺼내기
        dist, now = heapq.heappop(q)
        #처리된 노드는 무시
        if distance[now] < dist :
            continue
        #현재노드랑 연결된 다른노드 확인
        for i in graph[now]:
            cost = dist + i[1]
            if cost < distance[i[0]]:
                distance[i[0]] = cost
                heapq.heappush(q, (cost, i[0]))
                
dijkstra(start)

